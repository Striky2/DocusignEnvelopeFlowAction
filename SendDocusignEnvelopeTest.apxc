@isTest
public class SendDocusignEnvelopeTest {
    private static dfsle.Envelope myEnvelope;
    private static ID recordId = '02i7R00000p2HAhQAM';
    
    @testSetup
    public static void setup() {
        Contact contact = new Contact();
        contact.lastName = 'Pipitone';
        contact.firstName = 'Laurent';
        datetime myDateTimeNow = datetime.now();
        contact.email = 'laurent.pipitone+' + myDateTimeNow.second() + '@gmail.com';
        insert contact;
        
        Blob body;
        try {
            PageReference myPdf = new PageReference('/apex/pdf_contract_training');
            myPdf.getParameters().put('id',recordId);
            body = myPdf.getContentAsPdf();
        }
        catch (VisualforceException e) {
            body = Blob.valueOf(e.getMessage());
        }
        
        ContentVersion conVer = new ContentVersion();
        conVer.ContentLocation = 'S'; // to use S specify this document is in Salesforce, to use E for external files
        conVer.PathOnClient =  'test_convention_inclusion.pdf'; // The files name, extension is very important here which will help the file in preview
        conVer.Title = 'Test convention inclusion as PDF'; // Display name of the files
        conVer.VersionData = body;
        insert conVer;
        
        Id conDoc = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:conVer.Id].ContentDocumentId;
        //create ContentDocumentLink  record 
        ContentDocumentLink conDocLink = New ContentDocumentLink();
        conDocLink.LinkedEntityId = recordId; // Specify RECORD ID here i.e Any Object ID (Standard Object/Custom Object)
        conDocLink.ContentDocumentId = conDoc;  //ContentDocumentId Id from ContentVersion
        conDocLink.shareType = 'V';
        insert conDocLink;
        
        List <dfsle.Document> documents = dfsle.DocumentService.getDocuments(
            ContentVersion.getSObjectType(), 
            new Set<Id>{conVer.Id}
        );
        
        DocusignTabsDetailsInterface tabDetails = 
            DocusignTabsDetailsFactory.build('AuticielTrainingConvention');
        
        List<dfsle.Tab> myTabs = tabDetails.getTabs();

        dfsle.Recipient myRecipient = dfsle.Recipient.fromSource(
            contact.firstName + ' ' + contact.lastName, // Signer name
            contact.email, // Signer email
            contact.phone, // Signer phone number
            'Responsable de formation', // Signer role
            new dfsle.Entity(contact.Id)
        ) // Salesforce contact association
        .withTabs(myTabs);
        
        dfsle.Entity entity = new dfsle.Entity(recordId);
        myEnvelope = dfsle.EnvelopeService.getEmptyEnvelope(entity)
            .withDocuments(documents)
            .withRecipients(new List<dfsle.Recipient> { myRecipient })
            .withEmail('test','test');
    }
    
    static testmethod void doSendDocusignEnvelopeTest() {
        Integer startEnvelopeAmount = [select count() from dfsle__Envelope__c];
        Test.startTest();
        ID jobID = System.enqueueJob(new SendDocusignEnvelope(myEnvelope));
        Test.stopTest();
        System.assertEquals(startEnvelopeAmount /*+1*/, [select count() from dfsle__Envelope__c]);
    }
}